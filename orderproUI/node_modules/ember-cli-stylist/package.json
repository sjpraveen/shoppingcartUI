{
  "_args": [
    [
      {
        "raw": "ember-cli-stylist@0.4.11",
        "scope": null,
        "escapedName": "ember-cli-stylist",
        "name": "ember-cli-stylist",
        "rawSpec": "0.4.11",
        "spec": "0.4.11",
        "type": "version"
      },
      "/home/praveen/angularWorkspace/orderproUI/node_modules/ui-bootstrap"
    ]
  ],
  "_from": "ember-cli-stylist@0.4.11",
  "_id": "ember-cli-stylist@0.4.11",
  "_inCache": true,
  "_location": "/ember-cli-stylist",
  "_nodeVersion": "6.6.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ember-cli-stylist-0.4.11.tgz_1474832274032_0.4532850752584636"
  },
  "_npmUser": {
    "name": "ksnyde",
    "email": "ken@ken.net"
  },
  "_npmVersion": "3.5.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ember-cli-stylist@0.4.11",
    "scope": null,
    "escapedName": "ember-cli-stylist",
    "name": "ember-cli-stylist",
    "rawSpec": "0.4.11",
    "spec": "0.4.11",
    "type": "version"
  },
  "_requiredBy": [
    "/ui-bootstrap"
  ],
  "_resolved": "https://registry.npmjs.org/ember-cli-stylist/-/ember-cli-stylist-0.4.11.tgz",
  "_shasum": "53981ba7c7dfa44cf49033b4cefb3d09f4af02a0",
  "_shrinkwrap": null,
  "_spec": "ember-cli-stylist@0.4.11",
  "_where": "/home/praveen/angularWorkspace/orderproUI/node_modules/ui-bootstrap",
  "author": {
    "name": "Ken Snyder"
  },
  "bugs": {
    "url": "https://github.com/lifegadget/ember-cli-stylist/issues"
  },
  "dependencies": {
    "ember-cli-babel": "^5.1.6"
  },
  "description": "Ember-cli addon to allow CSP-safe inline CSS styling",
  "devDependencies": {
    "broccoli-asset-rev": "^2.4.2",
    "ember-ajax": "^2.0.1",
    "ember-cli": "^2.8.0",
    "ember-cli-app-version": "^1.0.0",
    "ember-cli-content-security-policy": "0.4.0",
    "ember-cli-dependency-checker": "^1.2.0",
    "ember-cli-htmlbars": "^1.0.3",
    "ember-cli-htmlbars-inline-precompile": "^0.3.1",
    "ember-cli-inject-live-reload": "^1.4.0",
    "ember-cli-jshint": "^1.0.0",
    "ember-cli-qunit": "^2.1.0",
    "ember-cli-release": "1.0.0-beta.2",
    "ember-cli-sri": "^2.1.0",
    "ember-cli-test-loader": "^1.1.0",
    "ember-cli-uglify": "^1.2.0",
    "ember-disable-prototype-extensions": "^1.1.0",
    "ember-export-application-global": "^1.0.5",
    "ember-load-initializers": "^0.5.1",
    "ember-resolver": "^2.0.3",
    "loader.js": "^4.0.1",
    "phantomjs": "^2.1.7"
  },
  "directories": {
    "doc": "doc",
    "test": "tests"
  },
  "dist": {
    "shasum": "53981ba7c7dfa44cf49033b4cefb3d09f4af02a0",
    "tarball": "https://registry.npmjs.org/ember-cli-stylist/-/ember-cli-stylist-0.4.11.tgz"
  },
  "ember-addon": {
    "configPath": "tests/dummy/config"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "files": [
    "ember-cli-build.js",
    "LICENSE.md",
    "README.md",
    "addon",
    "app",
    "bower.json",
    "config",
    "index.js",
    "package.json",
    "testem.json",
    "vendor"
  ],
  "gitHead": "7d0913489bdd03055d2e53e406e3a012bb7433d1",
  "homepage": "https://github.com/lifegadget/ember-cli-stylist#readme",
  "keywords": [
    "ember-addon"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ksnyde",
      "email": "ken@ken.net"
    }
  ],
  "name": "ember-cli-stylist",
  "optionalDependencies": {},
  "readme": "# [ember-cli-stylist](https://github.com/lifegadget/ember-cli-stylist)\n> Ember addon for a dynamic and safe \"style\" property\n\n![ ](https://travis-ci.org/lifegadget/ember-cli-stylist.svg) [![npm version](https://badge.fury.io/js/ember-cli-stylist.svg)](http://badge.fury.io/js/ember-cli-stylist) ![Code Climate](https://codeclimate.com/github/lifegadget/ember-cli-stylist/badges/gpa.svg)\n\n## Install ##\n- Modern CLI versions\n\n    ````bash\n    ember install ember-cli-stylist\n    ````\n\n## Usage ##\nThis addon helps component developers to provide HTML style attributes dynamically and safely. To use this just install and then in your component, mixin the `shared-stylist` mixin like so:\n\n```javascript\nimport SharedStylist from 'ember-cli-stylist/mixins/shared-stylist';\nexport default Ember.Component.extend(SharedStylist,{\n  attributeBindings: ['stylist:style'],\n  // your code here\n}\n```\n\nor if you're using tagless component ...\n\n```javascript\nimport SharedStylist from 'ember-cli-stylist/mixins/shared-stylist';\nexport default Ember.Component.extend(SharedStylist,{\n  tagName: '',\n}\n```\n\n```handlebars\n<div style={{stylist}}>\n  Hello world\n</div>\n```\n\nYou can optionally include a property in your component `styleBindings` which will specify which styles you want  proxied. If you don't specify then the default properties proxied are:\n\n> height width minHeight maxHeight minWidth maxWidth fontSize fontFamily fontWeight cursor display\n\nWith the Mixin added your component will now proxy style properties in a safe manner (aka, they will be escaped so XSS attacks are made much harder). For your component called `my-component` a container might use it like so:\n\n    {{my-component width='50%' height='100px' fontWeight=800}}\n\nwhich would result in the style property being set to:\n\n    <div id=\"ember456\" style=\"width: 50%; height: 100px; font-weight: 800px\">\n\n### Property Aliasing\n\nIn many cases you may find yourself with a component which you would like to represent/serve as a style but it's name is something other than the style property name. With \"aliasing\" you can address this problem. For example:\n\n```javascript\nstyleBindings: [width::_width, height],\n```\n\nIn this case we've stated our style should only listen for changes on *_width* and _height_ but the name \"_width\" is an alias for the style property name \"width\".\n\n## Template Helpers\n\nIn addition to the core functionality for observing and projecting style properties to the DOM, this addon provides a few useful helper functions for working with **classes**.\n\n- `classy` - this allows your to list a set of properties which -- if there is a value adds the value with a space prepended.\n\n\n## Dependencies\n\nNone.\n\n## Version Compatibility\n\nThis may very well work with older version of Ember and Ember-CLI but it was intended for:\n\n- Ember 1.13.7+\n- Ember-CLI 1.13.7+\n\nYou can see the CI results at: [Travis Reporting](https://travis-ci.org/lifegadget/ember-cli-stylist)\n\n## Repo Contribution\n\nWe're open to your creative suggestions but please move past the \"idea\" stage\nand send us a PR so we can incorporate your ideas without killing ourselves. :)\n\n## Licensing\n\nThis component is free to use under the MIT license:\n\nCopyright (c) 2015 LifeGadget Ltd\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lifegadget/ember-cli-stylist.git"
  },
  "scripts": {
    "build": "ember build",
    "start": "ember server",
    "test": "ember try:testall"
  },
  "version": "0.4.11"
}
